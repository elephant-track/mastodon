layout (location = 0) in vec3 aPos;

layout (location = 1) in mat3 e;
layout (location = 4) in mat3 ite;
layout (location = 7) in vec3 t;

layout (location = 8) in vec3 color;

out vec3 Normal;
out vec3 FragPos;
out vec3 ObjectColor;
out float fr;

uniform mat4 pvm;
uniform mat4 vm;
uniform mat3 itvm;
uniform float highlight_f;
uniform float highlight_k;

void main()
{
	ObjectColor = color;
	mat3 e2 = e;
	mat3 ite2 = ite;

	vec4 p = vm * vec4(e * aPos + t, 1);
	float dilate = highlight_f * p.z + highlight_k;

	fr = distance( vm * vec4(t, 1), p );
//	fr = r;// / dilate;

	float l0 = length(e[0]);
	float l1 = length(e[1]);
	float l2 = length(e[2]);

	e2 = mat3(
		(1 + 2 * dilate / l0) * e[0],
		(1 + 2 * dilate / l1) * e[1],
		(1 + 2 * dilate / l2) * e[2]);
	ite2 = transpose(inverse(e2));

	vec4 pos = vec4(e2 * aPos + t, 1.0);
	gl_Position = pvm * pos;
	Normal = normalize(itvm * ite2 * aPos);
	FragPos = vec3(vm * pos);
}
